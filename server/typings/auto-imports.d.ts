/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// Generated by unplugin-auto-import
// biome-ignore lint: disable
export {}
declare global {
  const APP_GUARD: typeof import('@nestjs/core')['APP_GUARD']
  const APP_INTERCEPTOR: typeof import('@nestjs/core')['APP_INTERCEPTOR']
  const AfterInsert: typeof import('typeorm')['AfterInsert']
  const AfterLoad: typeof import('typeorm')['AfterLoad']
  const AfterUpdate: typeof import('typeorm')['AfterUpdate']
  const ArrayNotEmpty: typeof import('class-validator')['ArrayNotEmpty']
  const AuthGuard: typeof import('../src/platform/common/token/token.service')['AuthGuard']
  const AuthGuardAdmin: typeof import('../src/platform/common/token/token.service')['AuthGuardAdmin']
  const BaseEntity: typeof import('typeorm')['BaseEntity']
  const BaseModel: typeof import('../src/common/base.model')['BaseModel']
  const BeforeInsert: typeof import('typeorm')['BeforeInsert']
  const BeforeUpdate: typeof import('typeorm')['BeforeUpdate']
  const Between: typeof import('typeorm')['Between']
  const BizException: typeof import('../src/exceptions/biz')['BizException']
  const Body: typeof import('@nestjs/common')['Body']
  const CaptchaEnum: typeof import('../src/enums/index')['CaptchaEnum']
  const Column: typeof import('typeorm')['Column']
  const Controller: typeof import('@nestjs/common')['Controller']
  const CreateDateColumn: typeof import('typeorm')['CreateDateColumn']
  const CustomRoute: typeof import('../src/common/base.decorator')['CustomRoute']
  const Delete: typeof import('@nestjs/common')['Delete']
  const DrawImg: typeof import('../src/utils/draw')['DrawImg']
  const Entity: typeof import('typeorm')['Entity']
  const Exclude: typeof import('class-transformer')['Exclude']
  const Get: typeof import('@nestjs/common')['Get']
  const Global: typeof import('@nestjs/common')['Global']
  const Header: typeof import('@nestjs/common')['Header']
  const HttpException: typeof import('@nestjs/common')['HttpException']
  const HttpStatus: typeof import('@nestjs/common')['HttpStatus']
  const IPHeader: (typeof import('../src/common/base.decorator'))['IPHeader']
  const IPHeaders: (typeof import('../src/common/base.decorator'))['IPHeaders']
  const IdParam: typeof import('../src/common/base.decorator')['IdParam']
  const InjectRedis: typeof import('@nestjs-modules/ioredis')['InjectRedis']
  const InjectRepository: typeof import('@nestjs/typeorm')['InjectRepository']
  const Injectable: typeof import('@nestjs/common')['Injectable']
  const IsArray: typeof import('class-validator')['IsArray']
  const IsBoolean: typeof import('class-validator')['IsBoolean']
  const IsEnum: typeof import('class-validator')['IsEnum']
  const IsInt: typeof import('class-validator')['IsInt']
  const IsNotEmpty: typeof import('class-validator')['IsNotEmpty']
  const IsNumber: typeof import('class-validator')['IsNumber']
  const IsOptional: typeof import('class-validator')['IsOptional']
  const IsPositive: typeof import('class-validator')['IsPositive']
  const IsString: typeof import('class-validator')['IsString']
  const JoinColumn: typeof import('typeorm')['JoinColumn']
  const Like: typeof import('typeorm')['Like']
  const LogModel: typeof import('../src/models/log')['LogModel']
  const ManyToOne: typeof import('typeorm')['ManyToOne']
  const MaxLength: typeof import('class-validator')['MaxLength']
  const MenuModel: typeof import('../src/models/menu')['MenuModel']
  const MetaKeyEnum: typeof import('../src/enums/index')['MetaKeyEnum']
  const MigrationsModel: typeof import('../src/models/log')['MigrationsModel']
  const MinLength: typeof import('class-validator')['MinLength']
  const Module: typeof import('@nestjs/common')['Module']
  const NestFactory: typeof import('@nestjs/core')['NestFactory']
  const OneToMany: typeof import('typeorm')['OneToMany']
  const OneToOne: typeof import('typeorm')['OneToOne']
  const PagingDot: typeof import('../src/common/base.dot')['PagingDot']
  const Param: typeof import('@nestjs/common')['Param']
  const ParseIntPipe: typeof import('@nestjs/common')['ParseIntPipe']
  const Patch: typeof import('@nestjs/common')['Patch']
  const Permission: typeof import('../src/common/base.decorator')['Permission']
  const PermissionEnum: typeof import('../src/enums/index')['PermissionEnum']
  const Post: typeof import('@nestjs/common')['Post']
  const PrimaryGeneratedColumn: typeof import('typeorm')['PrimaryGeneratedColumn']
  const Put: typeof import('@nestjs/common')['Put']
  const Query: typeof import('@nestjs/common')['Query']
  const RouterModule: typeof import('@nestjs/core')['RouterModule']
  const SetMetadata: typeof import('@nestjs/common')['SetMetadata']
  const Transform: typeof import('class-transformer')['Transform']
  const Tree: typeof import('typeorm')['Tree']
  const TreeChildren: typeof import('typeorm')['TreeChildren']
  const TreeParent: typeof import('typeorm')['TreeParent']
  const Type: typeof import('class-transformer')['Type']
  const TypeOrmModule: typeof import('@nestjs/typeorm')['TypeOrmModule']
  const UnprocessableEntityException: typeof import('@nestjs/common')['UnprocessableEntityException']
  const UpdateDateColumn: typeof import('typeorm')['UpdateDateColumn']
  const UseGuards: typeof import('@nestjs/common')['UseGuards']
  const UserAdminModel: typeof import('../src/models/user')['UserAdminModel']
  const UserModel: typeof import('../src/models/user')['UserModel']
  const UserRoleModel: typeof import('../src/models/user')['UserRoleModel']
  const ValidateNested: typeof import('class-validator')['ValidateNested']
  const ValidationPipe: typeof import('@nestjs/common')['ValidationPipe']
  const aesDecrypt: typeof import('../src/utils/crypto')['aesDecrypt']
  const aesEncrypt: typeof import('../src/utils/crypto')['aesEncrypt']
  const applyDecorators: typeof import('@nestjs/common')['applyDecorators']
  const database: typeof import('../src/config/database')['default']
  const databaseOptions: typeof import('../src/config/database')['databaseOptions']
  const dayjs: typeof import('dayjs')['default']
  const defaultAvatar: typeof import('../src/config/index')['defaultAvatar']
  const defaultPwd: typeof import('../src/config/index')['defaultPwd']
  const definePermission: typeof import('../src/utils/utils')['definePermission']
  const findAndCount: typeof import('../src/utils/utils')['findAndCount']
  const getPageQuery: typeof import('../src/utils/utils')['getPageQuery']
  const getRedisKey: typeof import('../src/utils/utils')['getRedisKey']
  const initPage: typeof import('../src/config/index')['initPage']
  const jwt: typeof import('jsonwebtoken')['default']
  const md5: typeof import('../src/utils/crypto')['md5']
  const random: typeof import('../src/utils/utils')['random']
  const randomId: typeof import('../src/utils/utils')['randomId']
  const useAffected: typeof import('../src/utils/utils')['useAffected']
  const useRandomName: typeof import('../src/utils/utils')['useRandomName']
  const useTransfrormQuery: typeof import('../src/utils/utils')['useTransfrormQuery']
  const validator: typeof import('../src/utils/validator')['validator']
}
// for type re-export
declare global {
  // @ts-ignore
  export type { Repository, FindOperator, TreeRepository } from 'typeorm'
  import('typeorm')
  // @ts-ignore
  export type { Redis } from 'ioredis'
  import('ioredis')
  // @ts-ignore
  export type { BizException } from '../src/exceptions/biz'
  import('../src/exceptions/biz')
  // @ts-ignore
  export type { MigrationsModel, LogModel } from '../src/models/log'
  import('../src/models/log')
  // @ts-ignore
  export type { MenuModel } from '../src/models/menu'
  import('../src/models/menu')
  // @ts-ignore
  export type { UserModel, UserAdminModel, UserRoleModel } from '../src/models/user'
  import('../src/models/user')
  // @ts-ignore
  export type { DrawImg } from '../src/utils/draw'
  import('../src/utils/draw')
  // @ts-ignore
  export type { CaptchaEnum, PermissionEnum, MetaKeyEnum } from '../src/enums/index'
  import('../src/enums/index')
}
