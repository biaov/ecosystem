/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// Generated by unplugin-auto-import
// biome-ignore lint: disable
export {}
declare global {
  const EffectScope: typeof import('vue')['EffectScope']
  const MenuTypeEnum: typeof import('../src/enums/index')['MenuTypeEnum']
  const PermissionKeyEnum: typeof import('../src/enums/index')['PermissionKeyEnum']
  const computed: typeof import('vue')['computed']
  const createApp: typeof import('vue')['createApp']
  const customRef: typeof import('vue')['customRef']
  const dayjs: typeof import('dayjs')['default']
  const defineAsyncComponent: typeof import('vue')['defineAsyncComponent']
  const defineComponent: typeof import('vue')['defineComponent']
  const definePermission: typeof import('../src/composables/usePermission')['definePermission']
  const effectScope: typeof import('vue')['effectScope']
  const genderEnum: typeof import('../src/enums/index')['genderEnum']
  const getCurrentInstance: typeof import('vue')['getCurrentInstance']
  const getCurrentScope: typeof import('vue')['getCurrentScope']
  const h: typeof import('vue')['h']
  const inject: typeof import('vue')['inject']
  const isProxy: typeof import('vue')['isProxy']
  const isReactive: typeof import('vue')['isReactive']
  const isReadonly: typeof import('vue')['isReadonly']
  const isRef: typeof import('vue')['isRef']
  const markRaw: typeof import('vue')['markRaw']
  const message: typeof import('ant-design-vue')['message']
  const nextTick: typeof import('vue')['nextTick']
  const onActivated: typeof import('vue')['onActivated']
  const onBeforeMount: typeof import('vue')['onBeforeMount']
  const onBeforeRouteLeave: typeof import('vue-router')['onBeforeRouteLeave']
  const onBeforeRouteUpdate: typeof import('vue-router')['onBeforeRouteUpdate']
  const onBeforeUnmount: typeof import('vue')['onBeforeUnmount']
  const onBeforeUpdate: typeof import('vue')['onBeforeUpdate']
  const onDeactivated: typeof import('vue')['onDeactivated']
  const onErrorCaptured: typeof import('vue')['onErrorCaptured']
  const onMounted: typeof import('vue')['onMounted']
  const onRenderTracked: typeof import('vue')['onRenderTracked']
  const onRenderTriggered: typeof import('vue')['onRenderTriggered']
  const onScopeDispose: typeof import('vue')['onScopeDispose']
  const onServerPrefetch: typeof import('vue')['onServerPrefetch']
  const onUnmounted: typeof import('vue')['onUnmounted']
  const onUpdated: typeof import('vue')['onUpdated']
  const onWatcherCleanup: typeof import('vue')['onWatcherCleanup']
  const permissionEnum: typeof import('../src/enums/index')['permissionEnum']
  const provide: typeof import('vue')['provide']
  const reactive: typeof import('vue')['reactive']
  const readonly: typeof import('vue')['readonly']
  const ref: typeof import('vue')['ref']
  const resolveComponent: typeof import('vue')['resolveComponent']
  const shallowReactive: typeof import('vue')['shallowReactive']
  const shallowReadonly: typeof import('vue')['shallowReadonly']
  const shallowRef: typeof import('vue')['shallowRef']
  const sourceEnum: typeof import('../src/enums/index')['sourceEnum']
  const toRaw: typeof import('vue')['toRaw']
  const toRef: typeof import('vue')['toRef']
  const toRefs: typeof import('vue')['toRefs']
  const toValue: typeof import('vue')['toValue']
  const triggerRef: typeof import('vue')['triggerRef']
  const unref: typeof import('vue')['unref']
  const useApiRequest: typeof import('../src/composables/useRequest')['useApiRequest']
  const useAttrs: typeof import('vue')['useAttrs']
  const useCommand: typeof import('../src/composables/useRequest')['useCommand']
  const useCssModule: typeof import('vue')['useCssModule']
  const useCssVars: typeof import('vue')['useCssVars']
  const useFormState: typeof import('../src/composables/useFormState')['useFormState']
  const useId: typeof import('vue')['useId']
  const useLink: typeof import('vue-router')['useLink']
  const useLoadingRequest: typeof import('../src/composables/useRequest')['useLoadingRequest']
  const useModel: typeof import('vue')['useModel']
  const usePagingApiRequest: typeof import('../src/composables/useRequest')['usePagingApiRequest']
  const usePermission: typeof import('../src/composables/usePermission')['usePermission']
  const useRandomId: typeof import('../src/composables/useUtils')['useRandomId']
  const useRestful: typeof import('../src/composables/useRequest')['useRestful']
  const useRoute: typeof import('vue-router')['useRoute']
  const useRouter: typeof import('vue-router')['useRouter']
  const useSlots: typeof import('vue')['useSlots']
  const useState: typeof import('../src/composables/useState')['useState']
  const useStore: typeof import('../src/stores/index')['useStore']
  const useTemplateRef: typeof import('vue')['useTemplateRef']
  const useToastRequest: typeof import('../src/composables/useRequest')['useToastRequest']
  const useTransformQuery: typeof import('../src/composables/useTransformQuery')['useTransformQuery']
  const useValidEmail: typeof import('../src/composables/useUtils')['useValidEmail']
  const useValidEmailForm: typeof import('../src/composables/useUtils')['useValidEmailForm']
  const useValidPhone: typeof import('../src/composables/useUtils')['useValidPhone']
  const useValidPhoneForm: typeof import('../src/composables/useUtils')['useValidPhoneForm']
  const watch: typeof import('vue')['watch']
  const watchEffect: typeof import('vue')['watchEffect']
  const watchPostEffect: typeof import('vue')['watchPostEffect']
  const watchSyncEffect: typeof import('vue')['watchSyncEffect']
}
// for type re-export
declare global {
  // @ts-ignore
  export type { Component, Slot, Slots, ComponentPublicInstance, ComputedRef, DirectiveBinding, ExtractDefaultPropTypes, ExtractPropTypes, ExtractPublicPropTypes, InjectionKey, PropType, Ref, MaybeRef, MaybeRefOrGetter, VNode, WritableComputedRef } from 'vue'
  import('vue')
  // @ts-ignore
  export type { FormRule, PagingResponse } from '../src/composables/types'
  import('../src/composables/types')
  // @ts-ignore
  export type { UserInfo } from '../src/stores/types'
  import('../src/stores/types')
  // @ts-ignore
  export type { permissionEnum, PermissionKeyEnum } from '../src/enums/index'
  import('../src/enums/index')
}
